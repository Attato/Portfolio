/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cube239: THREE.Mesh
    Cube239_1: THREE.Mesh
    Cube239_2: THREE.Mesh
    Cube239_3: THREE.Mesh
    Cube239_4: THREE.Mesh
    Cube239_5: THREE.Mesh
  }
  materials: {
    ['Voxel_mat9.005']: THREE.MeshStandardMaterial
    ['Voxel_mat138.005']: THREE.MeshStandardMaterial
    ['Voxel_mat255.005']: THREE.MeshStandardMaterial
    ['Voxel_mat18.005']: THREE.MeshStandardMaterial
    ['Voxel_mat16.005']: THREE.MeshStandardMaterial
    ['Voxel_mat95.002']: THREE.MeshStandardMaterial
  }
}

const Model = ({ ...props }: JSX.IntrinsicElements['group']) => {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/me.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[10, 6, -10]}>
        <mesh geometry={nodes.Cube239.geometry} material={materials['Voxel_mat9.005']} />
        <mesh geometry={nodes.Cube239_1.geometry} material={materials['Voxel_mat138.005']} />
        <mesh geometry={nodes.Cube239_2.geometry} material={materials['Voxel_mat255.005']} />
        <mesh geometry={nodes.Cube239_3.geometry} material={materials['Voxel_mat18.005']} />
        <mesh geometry={nodes.Cube239_4.geometry} material={materials['Voxel_mat16.005']} />
        <mesh geometry={nodes.Cube239_5.geometry} material={materials['Voxel_mat95.002']} />
      </group>
    </group>
  )
}

useGLTF.preload('/me.glb')

export default Model